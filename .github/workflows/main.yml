name: Blog Update Notification

on:
  push:
    branches:
      - main

env:
  FORCE_COLOR: 3
  WORKFLOWS_PATH: '${{ github.workspace }}/.github/workflows'
  PINO_LOG_LEVEL: ${{ vars.PINO_LOG_LEVEL }}

jobs:
  notify-subscribers:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKFLOWS_PATH }}

    steps:
      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          sparse-checkout: |
            .github
            src/app/articles
          sparse-checkout-cone-mode: false

      - id: check_commit_for_broadcast
        name: Check commit for broadcast
        working-directory: ./
        run: bash "$WORKFLOWS_PATH"/check_commit_for_broadcast.sh

      - id: set_up_nodejs
        name: Set up Node.js
        uses: actions/setup-node@v4.0.1
        env:
          ARTICLE_PATH: ${{ steps.check_commit_for_broadcast.outputs.article_path }}
        if: ${{ env.ARTICLE_PATH }}
        with:
          node-version: '21.6.1'

      - id: install_job_packages
        name: Install job packages
        env:
          ARTICLE_PATH: ${{ steps.check_commit_for_broadcast.outputs.article_path }}
        if: ${{ env.ARTICLE_PATH }}
        run: npm install

      - id: parse_front_matter
        name: Parse front matter
        # uses: actions/github-script@v7.0.1
        env:
          ARTICLE_PATH: ${{ steps.check_commit_for_broadcast.outputs.article_path }}
        if: ${{ env.ARTICLE_PATH }}
        run: |
          node "$WORKFLOWS_PATH"/parseFrontMatter.js | node "$WORKFLOWS_PATH"/formatLogs.js
        # with:
        #   script: |
        #     const workflows_path = process.env.WORKFLOWS_PATH
        #     const script = `${workflows_path}/parseFrontMatter.js`
        #     const { default: parseFrontMatter } = await import(script)
        #     return await parseFrontMatter({ github, context })

      - id: send_ck_email
        name: Send email via ConvertKit
        uses: actions/github-script@v7.0.1
        env:
          ARTICLE_FRONT_MATTER: ${{ steps.parse_front_matter.outputs.result }}
          ARTICLE_PATH: ${{ steps.check_commit_for_broadcast.outputs.article_path }}
          CK_API_KEY: ${{ secrets.CK_API_KEY }}
          CK_API_BASE_URL: ${{ vars.CK_API_BASE_URL }}
          CK_API_BC_ENDPOINT: ${{ vars.CK_API_BC_ENDPOINT }}
          CK_EMAIL_ADDRESS: ${{ vars.CK_EMAIL_ADDRESS }}
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
        if: ${{ env.ARTICLE_FRONT_MATTER }}
        with:
          script: |
            const workflows_path = process.env.WORKFLOWS_PATH
            const script = `${workflows_path}/sendCkEmail.js`
            const { default: sendCkEmail } = await import(script)
            return await sendCkEmail({ github, context })
